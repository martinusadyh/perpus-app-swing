/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LaporanBuku.java
 *
 * Created on Oct 23, 2012, 12:55:39 AM
 */
package perpus.ui.laporan;

import java.awt.BorderLayout;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.swing.JRViewer;
import org.springframework.util.StringUtils;
import perpus.Main;

/**
 *
 * @author adi
 */
public class LaporanBuku extends javax.swing.JPanel {

    public static final String PANEL_NAME = "Laporan Buku";
    private static LaporanBuku panel;
    private WorkerLaporan workerLaporan;
    private String relational;

    public static LaporanBuku getPanel() {
        if (panel == null) {
            panel = new LaporanBuku();
        }

        return panel;
    }
    
    /** Creates new form LaporanBuku */
    public LaporanBuku() {
        initComponents();
        modeComboBox();
        modeRadio();
    }
    
    private void modeComboBox(){
        txtColumn.setEnabled(false);
        rbEquals.setEnabled(false);
        rbNotEquals.setEnabled(false);
        rbLessThan.setEnabled(false);
        rbLessThanEqual.setEnabled(false);
        rbMoreThan.setEnabled(false);
        rbMoreThanEqual.setEnabled(false);
        
        String cmbtxt = cmbColumn.getSelectedItem().toString();
        if(cmbtxt.equalsIgnoreCase("TAHUN_TERBIT") 
                || cmbtxt.equalsIgnoreCase("JUMLAH")){
            txtColumn.setEnabled(true);
            rbEquals.setEnabled(true);
            rbNotEquals.setEnabled(true);
            rbLessThan.setEnabled(true);
            rbLessThanEqual.setEnabled(true);
            rbMoreThan.setEnabled(true);
            rbMoreThanEqual.setEnabled(true);
        } else if(cmbtxt.equalsIgnoreCase("KODE") 
                || cmbtxt.equalsIgnoreCase("JUDUL")
                || cmbtxt.equalsIgnoreCase("JENIS")
                || cmbtxt.equalsIgnoreCase("KOTA_TERBIT")
                || cmbtxt.equalsIgnoreCase("PENERBIT")
                || cmbtxt.equalsIgnoreCase("PENGARANG")){
            txtColumn.setEnabled(true);
            rbEquals.setEnabled(true);
            rbNotEquals.setEnabled(true);
        }
    }
    
    private void modeRadio(){
        if(rbEquals.isSelected()){
            relational = " = ";
        } else if(rbNotEquals.isSelected()){
            relational = " <> ";
        } else if(rbMoreThan.isSelected()){
            relational = " > ";
        } else if(rbMoreThanEqual.isSelected()){
            relational = " >= ";
        } else if(rbLessThan.isSelected()){
            relational = " < ";
        } else if(rbLessThanEqual.isSelected()){
            relational = " <= ";
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        rptPanel = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbColumn = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtColumn = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        rbEquals = new javax.swing.JRadioButton();
        rbMoreThan = new javax.swing.JRadioButton();
        rbLessThan = new javax.swing.JRadioButton();
        rbLessThanEqual = new javax.swing.JRadioButton();
        rbMoreThanEqual = new javax.swing.JRadioButton();
        rbNotEquals = new javax.swing.JRadioButton();

        rptPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout rptPanelLayout = new javax.swing.GroupLayout(rptPanel);
        rptPanel.setLayout(rptPanelLayout);
        rptPanelLayout.setHorizontalGroup(
            rptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
        );
        rptPanelLayout.setVerticalGroup(
            rptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 252, Short.MAX_VALUE)
        );

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/perpus/img/close.gif"))); // NOI18N
        btnClose.setToolTipText("Tutup Form");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/perpus/img/reload.png"))); // NOI18N
        btnRefresh.setToolTipText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel1.setText("By Column");

        cmbColumn.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "KODE", "JUDUL", "JENIS", "KOTA_TERBIT", "PENERBIT", "PENGARANG", "TAHUN_TERBIT", "JUMLAH" }));
        cmbColumn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbColumnItemStateChanged(evt);
            }
        });

        jLabel2.setText("Relational");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup1.add(rbEquals);
        rbEquals.setSelected(true);
        rbEquals.setText("equals");
        rbEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbEqualsActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbMoreThan);
        rbMoreThan.setText(">");
        rbMoreThan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMoreThanActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbLessThan);
        rbLessThan.setText("<");
        rbLessThan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbLessThanActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbLessThanEqual);
        rbLessThanEqual.setText("<=");
        rbLessThanEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbLessThanEqualActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbMoreThanEqual);
        rbMoreThanEqual.setText(">=");
        rbMoreThanEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMoreThanEqualActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbNotEquals);
        rbNotEquals.setText("not equals");
        rbNotEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNotEqualsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbEquals)
                    .addComponent(rbMoreThan)
                    .addComponent(rbLessThan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbNotEquals)
                    .addComponent(rbLessThanEqual)
                    .addComponent(rbMoreThanEqual))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {rbEquals, rbLessThan, rbLessThanEqual, rbMoreThan, rbMoreThanEqual, rbNotEquals});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbEquals)
                    .addComponent(rbNotEquals))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMoreThan)
                    .addComponent(rbMoreThanEqual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbLessThan)
                    .addComponent(rbLessThanEqual))
                .addGap(41, 41, 41))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {rbEquals, rbLessThan, rbLessThanEqual, rbMoreThan, rbMoreThanEqual, rbNotEquals});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClose))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtColumn))))
                    .addComponent(rptPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(btnRefresh)
                    .addComponent(btnClose)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rptPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnClose, btnRefresh, cmbColumn, jLabel1, jLabel2, txtColumn});

    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        Main.getMainForm().getMainTabbedPane().remove(this);
        panel = null;
}//GEN-LAST:event_btnCloseActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        if (workerLaporan != null && !workerLaporan.isDone()) {
            workerLaporan.cancel(true);
            workerLaporan = null;
        }
        workerLaporan = new WorkerLaporan();
        workerLaporan.execute();
        btnRefresh.setEnabled(false);
        Main.getMainForm().getLblStatus().setText("Persiapan laporan ...");
        Main.getMainForm().getProgressBar().setIndeterminate(true);
}//GEN-LAST:event_btnRefreshActionPerformed

    private void cmbColumnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbColumnItemStateChanged
        modeComboBox();
    }//GEN-LAST:event_cmbColumnItemStateChanged

    private void rbEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbEqualsActionPerformed
        modeRadio();
    }//GEN-LAST:event_rbEqualsActionPerformed

    private void rbNotEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNotEqualsActionPerformed
        modeRadio();
    }//GEN-LAST:event_rbNotEqualsActionPerformed

    private void rbMoreThanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMoreThanActionPerformed
        modeRadio();
    }//GEN-LAST:event_rbMoreThanActionPerformed

    private void rbMoreThanEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMoreThanEqualActionPerformed
        modeRadio();
    }//GEN-LAST:event_rbMoreThanEqualActionPerformed

    private void rbLessThanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbLessThanActionPerformed
        modeRadio();
    }//GEN-LAST:event_rbLessThanActionPerformed

    private void rbLessThanEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbLessThanEqualActionPerformed
        modeRadio();
    }//GEN-LAST:event_rbLessThanEqualActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnRefresh;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbColumn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rbEquals;
    private javax.swing.JRadioButton rbLessThan;
    private javax.swing.JRadioButton rbLessThanEqual;
    private javax.swing.JRadioButton rbMoreThan;
    private javax.swing.JRadioButton rbMoreThanEqual;
    private javax.swing.JRadioButton rbNotEquals;
    private javax.swing.JPanel rptPanel;
    private javax.swing.JTextField txtColumn;
    // End of variables declaration//GEN-END:variables

    private class WorkerLaporan extends SwingWorker<JasperPrint, Void> {

        @Override
        protected void done() {
            try {
                if (get() != null) {
                    Main.getMainForm().getLblStatus().setText("Persiapan Tampilan  ...");
                    rptPanel.removeAll();
                    rptPanel.setLayout(new BorderLayout());
                    rptPanel.add(new JRViewer(get()), BorderLayout.CENTER);
                    rptPanel.repaint();
                    
                    btnRefresh.setEnabled(true);
                    Main.getMainForm().getLblStatus().setText("");
                    Main.getMainForm().getProgressBar().setIndeterminate(false);
                }
            } catch (InterruptedException ex) {
                Logger.getLogger(LaporanPengembalianPinjaman.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ExecutionException ex) {
                Logger.getLogger(LaporanPengembalianPinjaman.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        @Override
        protected JasperPrint doInBackground() throws Exception {
            
            Main.getMainForm().getLblStatus().setText("Fecthing data laporan ...");

            if(cmbColumn.getSelectedItem().toString().equalsIgnoreCase("ALL")){
                return Main.getReportService().printLaporanBuku();
            } else {
                
                if(StringUtils.hasText(relational)){
                    return Main.getReportService().printLaporanBuku(
                            cmbColumn.getSelectedItem().toString(),
                            relational,
                            txtColumn.getText()
                    );
                } else {
                    throw new IllegalArgumentException("Relational belum dipilih");
                }
            }
        }
    }
}
